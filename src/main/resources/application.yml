# Default profile
spring:
  profiles:
    active:
#      - prod
      - dev
  jpa:
    properties:
      javax:
        persistence:
          validation:
            mode: none
  h2:
    console:
      enabled: true
      path: /h2-console
  data:
    web:
      pageable:
        default-page-size: 10
        max-page-size: 100
---
spring:
  profiles: prod
#  datasource:
#    url: jdbc:h2:./hoaxify-prod
#  h2:
#    console:
#      enabled: false
  jpa:
    hibernate:
      ddl-auto: update
#      ddl-auto: create
#    database-platform: org.hibernate.dialect.MySQL8Dialect
    database-platform: org.hibernate.dialect.MySQL57Dialect

  datasource:
    url: jdbc:mysql://${RDS_HOSTNAME:localhost}:${RDS_PORT:3306}/${RDS_DB_NAME:hoaxify-prod}
    username: ${RDS_USERNAME:root}
    password: ${RDS_PASSWORD:1asd}
    #   spring boot 2 this is required for all non in-memory db
    initialization-mode: always
hoaxify:
  upload-path: uploads-prod
# AWS
server:
  port: 5000
---
spring:
  jpa:
#    generate-ddl: true
#    hibernate:
#      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  profiles: dev
  datasource:
    url: jdbc:h2:mem:hoaxify-dev
  security:
    oauth2:
      client:
        registration:
          google:
            clientId:
            clientSecret:
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
            facebook:
              clientId:
              clientSecret:
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
            github:
              clientId:
              clientSecret:
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - user:email
                - read:user
            provider:
              facebook:
                authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
                tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
                userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
  main:
    allow-bean-definition-overriding: true

hoaxify:
  upload-path: uploads-dev
#  auth:
  auth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect

#datasource:
#  username: toma
#  password: toma
---
spring:
  profiles: test
hoaxify:
  upload-path: uploads-test
datasource:
  username: toma
  password: toma